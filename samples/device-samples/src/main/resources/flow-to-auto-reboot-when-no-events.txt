[{"id":"b34ef4b1.934388","type":"ibmiot","z":"f4af6754.694d38","name":"zjps4o"},{"id":"bc29d5db.007cc8","type":"ibmiot in","z":"f4af6754.694d38","authentication":"apiKey","apiKey":"b34ef4b1.934388","inputType":"evt","deviceId":"","applicationId":"","deviceType":"type","eventType":"+","commandType":"","format":"json","name":"IBM IoT","service":"registered","allDevices":true,"allApplications":"","allDeviceTypes":true,"allEvents":true,"allCommands":"","allFormats":true,"x":121,"y":294,"wires":[["65c06e3e.00e84"]]},{"id":"16573a5c.d0c886","type":"comment","z":"f4af6754.694d38","name":"Receive events from Watson IoT","info":"Configure the node with the Watson IoT Platform API-Key and Tokens. Also, the device details.","x":196.50001525878906,"y":243.8000030517578,"wires":[]},{"id":"e5b9bd1f.5cb37","type":"comment","z":"f4af6754.694d38","name":"Trigger the checking loop once","info":"Configure the node with the Watson IoT Platform API-Key and Tokens. Also, the device details.","x":606.5,"y":250.8000030517578,"wires":[]},{"id":"bc4fb629.827c18","type":"debug","z":"f4af6754.694d38","name":"Debug","active":true,"console":"false","complete":"true","x":930.5,"y":518.7999877929688,"wires":[]},{"id":"50e4ef1b.705a4","type":"http request","z":"f4af6754.694d38","name":"Send to Watson IoT Platform","method":"POST","ret":"txt","url":"","x":741.5,"y":618.7999877929688,"wires":[["bc4fb629.827c18"]]},{"id":"51ffac8a.c1b564","type":"function","z":"f4af6754.694d38","name":"Prepare diagnostic log","func":"var orgid = flow.get(\"orgid\");\nvar deviceId = msg.payload.device.id;\nvar deviceType = msg.payload.device.type;\n\nvar frequency = msg.payload.device.frequency;\nvar currentDate = new Date();\nvar timeDiff = Math.abs(currentDate.getTime() - msg.payload.device.time.getTime());\nvar timeSinceLastEvents = (timeDiff/1000);\n\nmsg = {\n    url:\"https://\" + orgid + \".internetofthings.ibmcloud.com/api/v0002/device/types/\"\n           + deviceType + \"/devices/\" + deviceId + \"/diag/logs\",\n    payload: {\n        message: \"Rebooting the device as no event received for \" \n            + timeSinceLastEvents + \" seconds. Normal Event publish\"\n            + \"frequency is \" + frequency + \" seconds\",\n        severity: 2,\n        data: \"There is no event received for \" + timeSinceLastEvents \n            + \" seconds. Normal Event publish frequency is about \"\n            + frequency + \" seconds\",\n        timestamp: currentDate.toISOString()\n    },\n    headers:{\n        \"Accept\":\"application/json\",\n        \"Content-type\":\"application/json\"\n    }\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":427.5,"y":563.7999877929688,"wires":[["50e4ef1b.705a4"]]},{"id":"5f67d0c0.1cad7","type":"function","z":"f4af6754.694d38","name":"Prepare Reboot command","func":"var orgid = flow.get(\"orgid\");\nvar deviceId = msg.payload.device.id;\nvar deviceType = msg.payload.device.type;\n\nmsg = {\n    url:\"https://\" + orgid + \".internetofthings.ibmcloud.com/api/v0002/mgmt/requests\",\n    payload: {\n        \"action\": \"device/reboot\",\n        \"devices\": [\n        {\n            \"typeId\": deviceType,\n            \"deviceId\": deviceId,\n        }]\n    },\n    headers:{\n        \"Accept\":\"application/json\",\n        \"Content-type\":\"application/json\"\n    }\n    \n};\n\nreturn msg;","outputs":1,"noerr":0,"x":416,"y":677,"wires":[["50e4ef1b.705a4"]]},{"id":"c8e1ba91.c60198","type":"switch","z":"f4af6754.694d38","name":"","property":"payload.type","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"num"},{"t":"eq","v":"1","vt":"num"}],"checkall":"true","outputs":2,"x":775.5,"y":442.79998779296875,"wires":[["58bc228.d9e60dc"],["51ffac8a.c1b564","5f67d0c0.1cad7","22401d78.de7d52"]]},{"id":"22401d78.de7d52","type":"function","z":"f4af6754.694d38","name":"Verify device events are sent in time?","func":"var stop = flow.get(\"stop\") || false;\n\nif(stop === true) {\n    return;\n}\n\nvar deviceList = flow.get(\"deviceList\") || [];\nvar len = deviceList.length;\nvar currentDate = new Date();\nvar device = null;\n\nvar msg = { payload: { \n        type : 0\n    }\n};\n\nfor (i = 0; i < len; i++) {\n    var device = deviceList[i];\n    if(device.logged !== 1) {\n        var timeDiff = Math.abs(currentDate.getTime() - device.time.getTime());\n        var diff = Math.ceil(timeDiff / 1000);\n        if(device.frequency != -1 && (device.frequency * 1.5) < diff) {\n            msg = {\n                payload: {\n                    type: 1,\n                    device:device\n                }\n            }\n            device.logged = 1;\n            return msg;\n        }\n    }\n}\nreturn msg;\n","outputs":1,"noerr":0,"x":467.5,"y":443.79998779296875,"wires":[["c8e1ba91.c60198"]]},{"id":"58bc228.d9e60dc","type":"delay","z":"f4af6754.694d38","name":"","pauseType":"delay","timeout":"2","timeoutUnits":"seconds","rate":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":803.5000152587891,"y":296.8000030517578,"wires":[["22401d78.de7d52"]]},{"id":"8e43bed8.15b78","type":"function","z":"f4af6754.694d38","name":"Trigger flow","func":"var triggered = flow.get(\"triggered\") || false;\nif(triggered === false) {\n    flow.set(\"triggered\", true);\n    return msg;\n}","outputs":1,"noerr":0,"x":576.5000152587891,"y":292.8000030517578,"wires":[["22401d78.de7d52"]]},{"id":"65c06e3e.00e84","type":"function","z":"f4af6754.694d38","name":"Process incoming event","func":"var start = flow.get(\"start\") || false;\nif(start === false) {\n    return;\n}\n// get the Device Id and Type from the topic\nvar deviceType = msg.topic.split('/')[2];\nvar deviceId = msg.topic.split('/')[4];\n\nvar deviceList = flow.get(\"deviceList\") || [];\nvar len = deviceList.length;\n\nvar device = null;\nfor (i = 0; i < len; i++) {\n    var d = deviceList[i];\n    if(d.id === deviceId &&\n       d.type === deviceType) {\n           device = d;\n           break;\n    }\n} \n\nif(device === null) {\n    device = {id:deviceId, type:deviceType, time: new Date(), frequency:-1, logged: 0};\n    deviceList.push(device);\n} else {\n    var currentDate = new Date();\n    var timeDiff = Math.abs(currentDate.getTime() - device.time.getTime());\n    device.frequency = Math.max(device.frequency, Math.ceil(timeDiff / 1000)); \n    device.time = currentDate;\n    if(device.logged == 1) {\n        device.logged = 0;\n            device.frequency = -1;\n    }\n}\n\nflow.set(\"deviceList\", deviceList);\n\nvar msg = { payload: JSON.stringify({ \n    device: device\n})\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":349.50001525878906,"y":294.8000030517578,"wires":[["8e43bed8.15b78","7a00bb0e.8d5d64"]]},{"id":"7a00bb0e.8d5d64","type":"debug","z":"f4af6754.694d38","name":"Debug","active":true,"console":"false","complete":"payload","x":412.95001220703125,"y":203.95001220703125,"wires":[]},{"id":"bbbb3eed.9a33","type":"inject","z":"f4af6754.694d38","name":"Trigger Start Flow","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":178,"y":125,"wires":[["3239d453.2c976c"]]},{"id":"3239d453.2c976c","type":"function","z":"f4af6754.694d38","name":"Start Flow","func":"flow.set(\"start\",true);\nflow.set(\"stop\",false);\nflow.set(\"orgid\",\"zjps4o\");\nflow.set(\"deviceList\",[]);\nflow.set(\"triggered\", false);","outputs":1,"noerr":0,"x":443,"y":126,"wires":[[]]},{"id":"1ab68d50.9d7b83","type":"comment","z":"f4af6754.694d38","name":"Click this button to Activate the flow","info":"","x":208,"y":71,"wires":[]},{"id":"9198235c.35313","type":"inject","z":"f4af6754.694d38","name":"Trigger Stop Flow","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":674,"y":122,"wires":[["31b40997.4be6e6"]]},{"id":"31b40997.4be6e6","type":"function","z":"f4af6754.694d38","name":"Stop Flow","func":"flow.set(\"stop\",true);\nflow.set(\"start\",false);\nflow.set(\"deviceList\",[]);\nflow.set(\"triggered\", false);","outputs":1,"noerr":0,"x":884,"y":122,"wires":[[]]},{"id":"32caf9aa.cf9f06","type":"comment","z":"f4af6754.694d38","name":"Click this button to Stop the flow","info":"","x":689,"y":68,"wires":[]},{"id":"fdeebdc8.8090c","type":"comment","z":"f4af6754.694d38","name":"Set Watson IoT API-Key and Token","info":"","x":732,"y":576,"wires":[]},{"id":"635efe4e.0d988","type":"comment","z":"f4af6754.694d38","name":"Set Organization ID","info":"","x":447,"y":70,"wires":[]},{"id":"7899c283.fbb9fc","type":"comment","z":"f4af6754.694d38","name":"events sent in time?","info":"","x":435,"y":403,"wires":[]},{"id":"c7d0c97.ff9f638","type":"comment","z":"f4af6754.694d38","name":"Trigger appropriate flow","info":"","x":818,"y":404,"wires":[]}]