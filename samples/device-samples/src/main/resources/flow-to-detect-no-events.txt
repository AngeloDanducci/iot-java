[{"id":"1d311db6.d579b2","type":"ibmiot","z":"49a9ecb0.5f4cdc","name":"zjps4o"},{"id":"124dffc3.2ccbb","type":"inject","z":"49a9ecb0.5f4cdc","name":"Trigger Start Flow","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":147,"y":134,"wires":[["be1faa0c.8c6978"]]},{"id":"be1faa0c.8c6978","type":"function","z":"49a9ecb0.5f4cdc","name":"Start Flow","func":"flow.set(\"start\",true);\nflow.set(\"stop\",false);\nflow.set(\"orgid\",\"zjps4o\");\nflow.set(\"deviceList\",[]);\nflow.set(\"triggered\", false);","outputs":1,"noerr":0,"x":398,"y":134,"wires":[[]]},{"id":"f77ab634.d3ca78","type":"comment","z":"49a9ecb0.5f4cdc","name":"Click this button to Activate the flow","info":"","x":177,"y":80,"wires":[]},{"id":"b348c6f8.cb3718","type":"inject","z":"49a9ecb0.5f4cdc","name":"Trigger Stop Flow","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":638,"y":134,"wires":[["6e874293.cf915c"]]},{"id":"6e874293.cf915c","type":"function","z":"49a9ecb0.5f4cdc","name":"Stop Flow","func":"flow.set(\"stop\",true);\nflow.set(\"start\",false);\nflow.set(\"deviceList\",[]);\nflow.set(\"triggered\", false);","outputs":1,"noerr":0,"x":851,"y":135,"wires":[[]]},{"id":"f403d23.e797c3","type":"comment","z":"49a9ecb0.5f4cdc","name":"Click this button to Stop the flow","info":"","x":658,"y":79,"wires":[]},{"id":"53599d63.3d4154","type":"ibmiot in","z":"49a9ecb0.5f4cdc","authentication":"apiKey","apiKey":"1d311db6.d579b2","inputType":"evt","deviceId":"","applicationId":"","deviceType":"type","eventType":"+","commandType":"","format":"json","name":"IBM IoT","service":"registered","allDevices":true,"allApplications":"","allDeviceTypes":true,"allEvents":true,"allCommands":"","allFormats":true,"x":87,"y":356,"wires":[["a83f2a2a.982928"]]},{"id":"2f4f6dea.4a7212","type":"debug","z":"49a9ecb0.5f4cdc","name":"Print the frequency of the message","active":true,"console":"false","complete":"payload","x":670.9499969482422,"y":263.95001220703125,"wires":[]},{"id":"a83f2a2a.982928","type":"function","z":"49a9ecb0.5f4cdc","name":"Process incoming event","func":"var start = flow.get(\"start\") || false;\nif(start === false) {\n    return;\n}\n// get the Device Id and Type from the topic\nvar deviceType = msg.topic.split('/')[2];\nvar deviceId = msg.topic.split('/')[4];\n\nvar deviceList = flow.get(\"deviceList\") || [];\nvar len = deviceList.length;\n\nvar device = null;\nfor (i = 0; i < len; i++) {\n    var d = deviceList[i];\n    if(d.id === deviceId &&\n       d.type === deviceType) {\n           device = d;\n           break;\n    }\n} \n\nif(device === null) {\n    device = {id:deviceId, type:deviceType, time: new Date(), frequency:-1, logged: 0};\n    deviceList.push(device);\n} else {\n    var currentDate = new Date();\n    var timeDiff = Math.abs(currentDate.getTime() - device.time.getTime());\n    device.frequency = Math.max(device.frequency, Math.ceil(timeDiff / 1000)); \n    device.time = currentDate;\n    if(device.logged == 1) {\n        device.logged = 0;\n        device.frequency = -1;\n    }\n}\n\nflow.set(\"deviceList\", deviceList);\n\nvar msg = { payload: JSON.stringify({ \n    device: device\n})\n};\n\nreturn msg;","outputs":1,"noerr":0,"x":315.50001525878906,"y":356.8000030517578,"wires":[["e2ac1465.7d7088","2f4f6dea.4a7212"]]},{"id":"7eef360b.64d128","type":"function","z":"49a9ecb0.5f4cdc","name":"Verify device events are sent in time?","func":"var stop = flow.get(\"stop\") || false;\n\nif(stop === true) {\n    return;\n}\n\nvar deviceList = flow.get(\"deviceList\") || [];\nvar len = deviceList.length;\nvar currentDate = new Date();\nvar device = null;\n\nvar msg = { payload: { \n        type : 0\n    }\n};\n\nfor (i = 0; i < len; i++) {\n    var device = deviceList[i];\n    if(device.logged !== 1) {\n        var timeDiff = Math.abs(currentDate.getTime() - device.time.getTime());\n        var diff = Math.ceil(timeDiff / 1000);\n        if(device.frequency != -1 && (device.frequency * 1.5) < diff) {\n            msg = {\n                payload: {\n                    type: 1,\n                    device:device\n                }\n            }\n            device.logged = 1;\n            return msg;\n        }\n    }\n}\nreturn msg;\n","outputs":1,"noerr":0,"x":432.5,"y":482.79998779296875,"wires":[["4b67a263.e8f12c"]]},{"id":"47592f1c.af27e","type":"debug","z":"49a9ecb0.5f4cdc","name":"","active":true,"console":"false","complete":"true","x":907.5,"y":541.7999877929688,"wires":[]},{"id":"d87c2ce5.a97ea","type":"http request","z":"49a9ecb0.5f4cdc","name":"Send to Watson IoT","method":"POST","ret":"txt","url":"","x":669.5,"y":605.7999877929688,"wires":[["47592f1c.af27e"]]},{"id":"770080bd.3b9d9","type":"function","z":"49a9ecb0.5f4cdc","name":"Prepare diagnostic log","func":"var orgid = flow.get(\"orgid\");\nvar deviceId = msg.payload.device.id;\nvar deviceType = msg.payload.device.type;\n\nvar frequency = msg.payload.device.frequency;\nvar currentDate = new Date();\nvar timeDiff = Math.abs(currentDate.getTime() - msg.payload.device.time.getTime());\nvar timeSinceLastEvents = (timeDiff/1000);\n\nmsg = {\n    url:\"https://\" + orgid + \".internetofthings.ibmcloud.com/api/v0002/device/types/\"\n           + deviceType + \"/devices/\" + deviceId + \"/diag/logs\",\n    payload: {\n        message: \"Event not received for \" + timeSinceLastEvents \n            + \" seconds. Normal Event publish frequency is \"\n            + frequency + \" seconds\",\n        severity: 2,\n        data: \"There is no event received for \" + timeSinceLastEvents \n            + \" seconds. Normal Event publish frequency is about \"\n            + frequency + \" seconds\",\n        timestamp: currentDate.toISOString()\n    },\n    headers:{\n        \"Accept\":\"application/json\",\n        \"Content-type\":\"application/json\"\n    }\n    \n};\n\nreturn msg;","outputs":1,"noerr":0,"x":381.5,"y":603.7999877929688,"wires":[["d87c2ce5.a97ea"]]},{"id":"4b67a263.e8f12c","type":"switch","z":"49a9ecb0.5f4cdc","name":"","property":"payload.type","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"num"},{"t":"eq","v":"1","vt":"num"}],"checkall":"true","outputs":2,"x":754.5,"y":482.79998779296875,"wires":[["1dedb49b.d83e0b"],["770080bd.3b9d9","7eef360b.64d128"]]},{"id":"1dedb49b.d83e0b","type":"delay","z":"49a9ecb0.5f4cdc","name":"","pauseType":"delay","timeout":"2","timeoutUnits":"seconds","rate":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":769.5000152587891,"y":358.8000030517578,"wires":[["7eef360b.64d128"]]},{"id":"e2ac1465.7d7088","type":"function","z":"49a9ecb0.5f4cdc","name":"Trigger flow","func":"var triggered = flow.get(\"triggered\") || false;\nif(triggered === false) {\n    flow.set(\"triggered\", true);\n    return msg;\n}","outputs":1,"noerr":0,"x":542.5000152587891,"y":354.8000030517578,"wires":[["7eef360b.64d128"]]},{"id":"e9cafc8e.f40a","type":"comment","z":"49a9ecb0.5f4cdc","name":"Receive events from Watson IoT","info":"Configure the node with the Watson IoT Platform API-Key and Tokens. Also, the device details.","x":162.50001525878906,"y":305.8000030517578,"wires":[]},{"id":"9d44430c.f02fb","type":"comment","z":"49a9ecb0.5f4cdc","name":"Trigger the testing loop once","info":"Configure the node with the Watson IoT Platform API-Key and Tokens. Also, the device details.","x":617.5000152587891,"y":312.8000030517578,"wires":[]},{"id":"7ce4a551.8149ec","type":"comment","z":"49a9ecb0.5f4cdc","name":"Set Organization ID","info":"","x":414,"y":78,"wires":[]},{"id":"6b9cbad6.6f1504","type":"comment","z":"49a9ecb0.5f4cdc","name":"Set Watson IoT API-Key and Token","info":"","x":682,"y":660,"wires":[]}]